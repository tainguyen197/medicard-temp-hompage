generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("EDITOR")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Media     Media[]
  posts     Post[]
}

model Post {
  id            String         @id @default(cuid())
  title         String
  slug          String         @unique
  content       String
  excerpt       String?
  featuredImage String?
  featured      Boolean        @default(false)
  status        String         @default("DRAFT")
  publishedAt   DateTime?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  authorId      String
  media         Media[]
  author        User           @relation(fields: [authorId], references: [id])
  categories    PostCategory[]
}

model Category {
  id          String         @id @default(cuid())
  name        String         @unique
  slug        String         @unique
  description String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  posts       PostCategory[]
}

model PostCategory {
  postId     String
  categoryId String
  assignedAt DateTime @default(now())
  post       Post     @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}

model Service {
  id             String   @id @default(cuid())
  slug           String   @unique
  title          String
  description    String?
  status         String   @default("DRAFT")
  featureImageId String?  @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  featureImage   Media?   @relation("ServiceFeatureImage", fields: [featureImageId], references: [id])
}

model Media {
  id           String   @id @default(cuid())
  url          String
  fileName     String?
  originalName String?
  fileType     String?
  fileSize     Int?
  createdAt    DateTime @default(now())
  uploadedById String?
  postId       String?
  uploadedBy   User?    @relation(fields: [uploadedById], references: [id])
  post         Post?    @relation(fields: [postId], references: [id])
  serviceImage Service? @relation("ServiceFeatureImage")
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String
  entity    String
  entityId  String
  userId    String
  details   String?
  createdAt DateTime @default(now())
}
